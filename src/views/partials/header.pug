header
  //- [Pug 문법] 태그= 문법은 #{} 문법과 달리 한 html 태그 자리에 오직 변수 자신의 값으로만 채우려는 경우에 사용 가능
      //- h1=pageTitle
  
  //- a(href='/')
  //- #10.2 Styles Part Two 깃헙강의코드북붙했으니재확인요
  a(href="/").header__logo

    //- [ CSS - fontawesome ] i.fab.fa-youtube 적용하여 기존 코드 내용 대체
    i.fab.fa-youtube

  nav
    ul      
      //- [ CSS - fontawesome ] i.fab.fa-youtube 적용하여 기존 코드 내용 대체
      //- li
      //-   a(href="/") Home
      
      li 
        //- a(href="/search") Search
        //- #10.2 Styles Part Two 깃헙강의코드북붙했으니재확인요
        a(href="/search") 
          i.fas.fa-search

      //- 혼자 해볼 것들 (리팩토링): 로그인 안한 상태라면 nav 태그에서 Join 항목, Log in 항목 보여주고, 로그인 상태라면 Join 항목은 없애고, Log out 항목 보여주도록 리팩토링요
      
      //- [ Express-session 라이브러리 연계 문법 ] if !req.session.loggedIn 오류메시지: Cannot read property 'session' of undefined (즉, 누가 사용자인지 알 수 있더라도 그 정보를 pug 템플릿과 공유하지는 못하는 상황.) 
      //- [ Express-session 라이브러리 연계 문법 ] Pug 템플릿에서 req.session.loggedIn 형태로는 session에 접근 불가. locals 활용해 접근 가능.
      //- [ Express-session 라이브러리 연계 문법 ] Pug 템플릿이 전역(global) 변수인 locals에 접근할 수 있으므로, Pug와 Express가 서로 locals를 공유할 수 있도록 설정하여 사용자가 로그인 했는지 알 수 있게 만들어야 함. 
      //- [ Express-session 라이브러리 연계 문법 ] locals 오브젝트는 이미 모든 Pug 템플릿에 import된 오브젝트임. Middlewares.js에서 res.locals.loggedIn = Boolean(req.session.loggedIn); 코드를 통해 session 로그인 상태를 받아서 locals에 로그인 상태를 전달(공유)함
      
      //- [ Express-session 라이브러리 연계 문법 ] Pug 템플릿에서 req.session.loggedIn 형태로는 session에 접근 불가. 별도의 전용 문법 없이 locals 활용해 접근 가능.
      //- [ Express-session 라이브러리 연계 문법 ] middlewares.js의 localsMiddleware 함수 내의 res.locals.loggedIn = Boolean(req.session.loggedIn); 코드 값을 base.pug에서 별도의 전용 문법 없이 loggedIn 이라는 이름으로 접근함
      if loggedIn
        li
          a(href="/videos/upload") Upload Video
        li
          a(href="/users/edit") Edit-Profile
        li
          a(href="/users/logout") Log Out
        li 
          //- [ Express-session 라이브러리 연계 문법 ] userContoller.js 의 postLogin 함수 내의 req.session.userDbResult = userDbResult; 코드를 통해 session 으로 전달하고 middlewares.js의 localsMiddleware 함수 내의 res.locals.loggedInUserDb = req.session.userDbResult || {}; 코드 값을 base.pug에서 별도의 전용 문법 없이 loggedInUserDb._id 이라는 항목으로 접근함
          //- [ Express-session 라이브러리 연계 문법 ] My Profile 페이지 연결은 비공개 상테에서도 전체공개 페이지이므로 아무나 열람 가능함. 
          //- [ Express-session 라이브러리 연계 문법 ] 로그인한 사용자 당사자의 식별값을 userController.js 의 postJoin 함수 내의 await User.create({}) 쿼리문을 통해 MongoDB 에 의해 자체 부여된 _id 값으로 파악함
          a(href=`/users/${loggedInUserDb._id}`) My Profile            

        li.header__space_btw_welcome_and_avatar Welcome #{loggedInUserDb.name} !

        //- [ Express-session 라이브러리 연계 문법 ] session으로부터 locals에 전달(공유)된 값(즉, 전역 global 속성)을 별도의 전용 문법 없이 #{loggedInUser.name} 형태로 Pug에서 호출 가능함
        //- [ Express-session 라이브러리 연계 문법 ] userController.js의 postLogin 함수 내의 userDbResult 정보를 locals로 전달(공유)해서 Pug 파일에서 그 값을 사용자에게 보여줌 (예-a(href="") #{loggedInUser.name} 님의 Profile)
        //- [ Express-session 라이브러리 연계 문법 ] userContoller.js 의 postLogin 함수 내의 req.session.userDbResult = userDbResult; 코드를 통해 session 으로 전달하고 middlewares.js의 localsMiddleware 함수 내의 res.locals.loggedInUserDb = req.session.userDbResult || {}; 코드 값을 base.pug에서 별도의 전용 문법 없이 loggedInUserDb.name 이라는 이름으로 접근함            
        //- li               
          //- a(href="/my-profile") #{loggedInUserDb.name} 님의 Profile

        //- #10.2 Styles Part Two 깃헙강의코드북붙했으니재확인요 (수강생이 코드 보완)
        //- https://github.com/nomadcoders/wetube-reloaded/commit/37bec52bc3552170d0cd019ae822dc45d10f8776
        //- if loggedInUserDb.socialOnly
        //-   img(src=loggedInUserDb.avatarUrl).header__avatar
        //- else
        //-   img(src="/" + loggedInUserDb.avatarUrl).header__avatar
        
        //- [ Pug 문법 ] #10.3 말은 되지만 실상 인식불가 코드 if loggedInUserDb.avatarUrl === '' 등록된 avatarUrl 값이 없는 로그인 사용자의 경우 기본 이모지를 보여줌
        //- [ Pug 문법 ] #10.3 (수강생 보완 코드) if !loggedInUserDb.avatarUrl
          //- 자체보완완료 --- ★★★ --- User.js 모델 내의 socialOnly : false 인 사용자는 avatarUrl : 항목에 담기는 값의 총 글자수가 48자(예- uploads\avatars\89a7577a465d529796065b886a8cd7ff ) 로 고정되어 있어서 48자 여부(사이트직접가입계정/GitHub계정)에 따라 아바타이미지 불러오는 주소값을 다르게 식별하도록 처리함
          //- 자체보완완료 --- ★★★ --- 기반코드1 middlewares.js 내의 export const avatarUpload = multer({ dest: 'uploads/avatars/', limits: { fileSize: 3000000, }, });
          //- 자체보완완료 --- ★★★ --- 기반코드2 edit-profile.pug 내의 label(for='avatarSection') Avatar 와 input(id='avatarSection', name='avatarByMulter', type='file', accept='image/*')
        if !loggedInUserDb.avatarUrl
          span.header__avatar 😊
        else if loggedInUserDb.avatarUrl.length == 48
          img.header__avatar(src='/' + loggedInUserDb.avatarUrl)
        else
          img.header__avatar(src=loggedInUserDb.avatarUrl)

      else
        li 
          //- a(href="/join") Join
          //- #10.2 Styles Part Two 깃헙강의코드북붙했으니재확인요
          a(href="/join").header__btn  Join

        li 
          a(href="/login") Log in
    