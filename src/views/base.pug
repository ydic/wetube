//- extends base.pug를 명시한 pug파일들에 html 기본 구성 골격을 리턴해줌

doctype html 
//- html(lang="en")
html(lang="ko")
  head 
    //- Controller 파트의 res.render 파라미터 값으로 {pageTitle : 'Home'} 오브젝트를 코딩해 놓았기에 pug파일의 #{pageTitle} 자리에 값이 담겨지게 됨
    //- [Pug 문법] #{} 문법 사용하면 한 html 태그에 대해 variable를 다른 text (예: | WeTube)와 섞어서 쓸 수 있음
          /* title #{pageTitle} | WeTube */
    //- [ Express-session 라이브러리 연계 문법 ] Pug 템플릿에서 req.session.loggedIn 형태로는 session에 접근 불가. 별도의 전용 문법 없이 locals 활용해 접근 가능.
    //- [ Express-session 라이브러리 연계 문법 ] middlewares.js의 localsMiddleware 함수 내의 res.locals.siteNameByLocals = 'Wetube'; 코드 값을 base.pug에서 별도의 전용 문법 없이 #{siteNameByLocals} 이라는 이름으로 접근함
    title #{pageTitle} | #{siteNameByLocals}

    //- (용어 약자 풀이 주의: MVP 디자인 패턴이 아님. Model View Presenter) Minimum Viable Product (MVP CSS) 
    //- Mobile friendly / Works out of the box / Easy to customize / Only semantic HTML / No class names / Perfect for an MVP
    //- [ CSS - fontawesome ] #10.0 제대로 된 CSS 구성을 시작할 것이므로 base.pug 에서 fontawesome CDN 경로를 첨부하고 임시로 사용해왔던 MVP CSS 참조를 중단함
    //- [ CSS - fontawesome ] /client/scss/ 폴더 내에 config 폴더(_variables.scss, _reset.scss 등) / components 폴더(header, footer 등) / screens 폴더(home, search 등) 으로 폴더 구분하여 CSS 제작
        //- link(rel="stylesheet" href="https://unpkg.com/mvp.css")
    link(rel="stylesheet", href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css")
    
    //- [ mini-css-extract-plugin 문법 & WebPack 문법 & Pug 문법 ] webpack.config.js 에서의 configuration 설정으로 인해 변환 처리된 CSS 파일을 mini-css-extract-plugin 통해서 /assets/css/styles.css 경로에 위치하도록 만든 후 해당 CSS 를 브라우저단의 Pug 템플릿에 연결시킴
    //- [ mini-css-extract-plugin 문법 & WebPack 문법 & Pug 문법 ] client 폴더의 파일은 WebPack 에 의해서만 로딩 가능함 / assets 폴더의 파일은 사용자, Pug, 브라우저에 의해서만 로딩 가능함
    link(rel="stylesheet" href="/static/css/styles.css")

  body
    //- [Pug 문법] include를 통해 모든 pug 페이지(extends)에 동일한 header 태그를 생성함
    //- [ CSS & saas-loader ] Pug 전용 /views 폴더에서 mixins 폴더나 partials 폴더 내에 생성한 파일명과 동일한 이름으로 SCSS 쪽에도 (즉, /client/scss/components/ 쪽에도) 파일을 만들어 놓은 후에 CSS 작업요 
    include partials/header
    
    main
      block content

      //- [Pug 문법] include를 통해 모든 pug 페이지(extends)에 동일한 footer 태그를 생성함
      //- [ CSS & /client/scss/ ] Pug 전용 /views 폴더에서 mixins 폴더나 partials 폴더 내에 생성한 파일명과 동일한 이름으로 SCSS 쪽에도 (즉, /client/scss/components/ 쪽에도) 파일을 만들어 놓은 후에 CSS 작업요 
      include partials/footer.pug
      
      //- [ WebPack & Pug 문법 ] base.pug 가 bundle 처리된 /assets/js/main.js 파일을 불러올 수 있도록 연결해야 함 script(src='/static/js/main.js')
      script(src='/static/js/main.js')