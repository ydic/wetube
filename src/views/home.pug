//- [Pug 문법] extends를 통해 html 레이아웃을 base.pug 코드로부터 상속받음
//- [Pug 문법] block을 통해 base.pug 레이아웃 기반으로 html 내용 재구성

extends base.pug

//- mixin 기능 모듈화 시킨 pug파일은 include 통해서 연결해줘야 함
include mixins/video.pug

block content

  //- [Pug 문법] 본 pug파일 each in 문법(iteration 문법) 속의 videos는 videoController.js 코드 내 trending 함수에 담긴 res.render 배열(ARRAY) 파라미터임
  //- [Pug 문법] videos ARRAY 안의 각 element에 대해서 li를 만들어서 videoItem을 그 안에 넣어줌
  
  //- [Pug 문법] mixin을 통해 각 페이지마다 같은 형태의 HTML을 보여주면서 다른 데이터를 제공할 수 있도록 해줌 ("똑똑한 partial")
  //- YouTube.com 사이트는 동영상 리스트 component 구조가 페이지 성격에 맞춰 재사용됨 (복붙 최소화, 동일 구조 재사용)
  //- [Pug 문법] 주의사항: mixin 기능 모듈화 시킨 pug파일은 include 통해서 연결해줘야 함. 그러나 기본적으로 include는 내용 변동 없는 html 페이지 연동(예- footer)에 적합
  
  each videoItem in realArrayVideos
  
    //- [Pug 문법] videoMixin이라고 명명한 mixin을 호출(include 하고 +)해서 각각의 videoItem 정보 객체를 보냄 (그러면 views/mixins/video.pug의 mixin videoMixin(info) 파라미터로 그 값이 들어옴)
    +videoMixin(videoItem)
  
  else 
    //- [Pug 문법] 사용자가 요청한 내용에 대해서 현재 빈 ARRAY 상태임(또는 length가 0)을 사용자에게 알려줌
  
    li Sorry nothing found.